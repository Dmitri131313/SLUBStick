#define _GNU_SOURCE
#include <stdio.h>
#include <sys/socket.h>
#include <string.h>
#include <unistd.h>
#include <stdlib.h>
#include <stdint.h>
#include <stdbool.h>
#include <sched.h>
#include <pthread.h>
#include <poll.h>
#include <assert.h>
#include <time.h>
#include <sys/mman.h>
#include <sys/ipc.h>
#include <sys/msg.h>
#include <sys/wait.h>
#include <sys/syscall.h>
#include <sys/ioctl.h>
#include <errno.h>

#include "utils.h"

int make_queue(key_t key, int msgflg)
{
    int result;
    if ((result = msgget(key, msgflg)) == -1)
        pr_perror("msgget");
    return result;
}

typedef struct {
  long mtype;
  char mtext[1];
} msg;

void send_msg(int msqid, void *msgp, size_t msgsz, int msgflg)
{
    if (msgsnd(msqid, msgp, msgsz, msgflg) == -1)
        pr_perror("msgsnd");
    return;
}

void send_msg_no_err(int msqid, void *msgp, size_t msgsz, int msgflg)
{
    msgsnd(msqid, msgp, msgsz, msgflg);
}

ssize_t get_msg(int msqid, void *msgp, size_t msgsz, long msgtyp, int msgflg)
{
    ssize_t ret;
    ret = msgrcv(msqid, msgp, msgsz, msgtyp, msgflg);
    if (ret < 0)
        pr_perror("msgrcv");
    return ret;
}

ssize_t get_msg_no_err(int msqid, void *msgp, size_t msgsz, long msgtyp, int msgflg)
{
    return msgrcv(msqid, msgp, msgsz, msgtyp, msgflg);
}